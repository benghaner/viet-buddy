@inject TranslationRepository TranslationRepository

@if (!String.IsNullOrEmpty(HeaderText))
{   
    <h2>@HeaderText</h2>
}

<EditForm Model="translation" OnValidSubmit="Submit">
    <FormSection HelpText="Add a word or phrase">
        <div class="input-group mb-2">
            <label for="vietnamese" class="input-group-text">VN</label>
            <InputText @bind-Value="translation.Vietnamese" class="form-control" id="vietnamese" autofocus required />
        </div>
        <div class="input-group">
            <label for="english" class="input-group-text">EN</label>
            <InputText @bind-Value="translation.English" class="form-control" id="english" required />
        </div>
    </FormSection>

    <FormSection>
        <label for="tags" class="form-label text-secondary">Include example sentences</label>
        <InputText @bind-Value="example" class="form-control" />
        @if (translation.Examples.Any())
        {
            <div class="mt-3">
                @foreach (var example in translation.Examples)
                {
                    <p class="d-flex gap-2 align-items-center">
                        <IconTrash Clicked="@(() => RemoveExample(example))" />
                        <span>@example</span>
                    </p>
                }
            </div>
        }
    </FormSection>

    <FormSection>
        <label for="tags" class="form-label text-secondary">Tag a book, person, etc. for context</label>
        <InputText class="form-control"
            list="tagsList"
            id="tags"
            placeholder="New or existing tag..."
            @bind-Value="tag" />
        <datalist id="tagsList">
            @* <option value="dế mèn phiêu lưu ký" /> *@
        </datalist>
        @if (translation.Tags.Any())
        {
            <div class="mt-3">
                @foreach (var tag in translation.Tags)
                {
                    <p class="d-flex gap-2 align-items-center">
                        <IconTrash Clicked="@(() => RemoveTag(tag))" />
                        <span>@tag</span>
                    </p>
                }
            </div>
        }
    </FormSection>

    <div class="d-flex gap-1">
        <button class="btn btn-primary" type="submit">Submit</button>
        @if (isNew)
        {
            <button class="btn btn-outline-secondary" type="button" @onclick="Reset">Reset</button>
        }
        else
        {
            <button class="btn btn-outline-danger" type="button" @onclick="Delete">Delete</button>
        }
    </div>
</EditForm>

@code {
    [Parameter] public Translation translation { get; set; } = new Translation();
    [Parameter] public string HeaderText { get; set; }
    private string _example;
    public string example
    {
        get { return _example; }
        set
        {
            _example = value;
            translation.Examples.Add(value);
            _example = "";
        }
    }
    private string _tag;
    private string tag
    {
        get { return _tag; }
        set
        {
            _tag = value;
            translation.Tags.Add(value);
            _tag = "";
        }
    }
    private bool isNew;

    protected override void OnInitialized()
    {
        isNew = (translation.Id == null);
    }

    private void RemoveTag(string tag) => translation.Tags.Remove(tag);
    
    private void RemoveExample(string example) => translation.Examples.Remove(example);

    private async Task Submit()
    {
        if (isNew)
        {
            await TranslationRepository.AddAsync(translation);
            Reset();
        }
    }

    private void Reset() => translation = new Translation();

    private void Delete()
    {
        throw new NotImplementedException();
    }
}